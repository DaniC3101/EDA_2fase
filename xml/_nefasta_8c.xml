<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_nefasta_8c" kind="file" language="C++">
    <compoundname>Nefasta.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="_biblioteca_2_estruturas_8h" local="yes">Estruturas.h</includes>
    <incdepgraph>
      <node id="5">
        <label>Estruturas.h</label>
        <link refid="_biblioteca_2_estruturas_8h_source"/>
      </node>
      <node id="1">
        <label>Biblioteca/Nefasta.c</label>
        <link refid="_nefasta_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_nefasta_8c_1ac2f2f192e57def4d675d1447597d683b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ExisteVertice</definition>
        <argsstring>(Grafo *grafo, int atual[], int inserido[])</argsstring>
        <name>ExisteVertice</name>
        <param>
          <type><ref refid="struct_grafo" kindref="compound">Grafo</ref> *</type>
          <declname>grafo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atual</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>inserido</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Verifica se uma posição já existe como vértice no grafo. </para>
        </briefdescription>
        <detaileddescription>
<para>Verifica se já existe algum dos vértices em posições dadas.</para>
<para>Percorre a lista de vértices do grafo e verifica se alguma das posições dadas corresponde à posição de um vértice já existente.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>grafo</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o grafo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atual</parametername>
</parameternamelist>
<parameterdescription>
<para>Array com as coordenadas da primeira posição. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inserido</parametername>
</parameternamelist>
<parameterdescription>
<para>Array com as coordenadas da segunda posição. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true Se alguma das posições já existir no grafo. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Biblioteca/Nefasta.c" line="16" column="6" bodyfile="Biblioteca/Nefasta.c" bodystart="16" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="_nefasta_8c_1aed1f128c5665a92d36e30453ea9c72a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CriarPosicaoNefasta</definition>
        <argsstring>(Vertice *verticeAtual, Vertice *verticeInserido, Grafo *grafo)</argsstring>
        <name>CriarPosicaoNefasta</name>
        <param>
          <type><ref refid="struct_vertice" kindref="compound">Vertice</ref> *</type>
          <declname>verticeAtual</declname>
        </param>
        <param>
          <type><ref refid="struct_vertice" kindref="compound">Vertice</ref> *</type>
          <declname>verticeInserido</declname>
        </param>
        <param>
          <type><ref refid="struct_grafo" kindref="compound">Grafo</ref> *</type>
          <declname>grafo</declname>
        </param>
        <briefdescription>
<para>Cria as posições com efeito nefasto entre dois vértices. </para>
        </briefdescription>
        <detaileddescription>
<para>Calcula e cria posições nefastas com base nas posições de dois vértices.</para>
<para>Calcula as posições nefastas com base na distância entre os vértices. Verifica se as posições já existem no grafo ou se estão fora dos limites e chama a função CriarNefasta para as registar.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verticeAtual</parametername>
</parameternamelist>
<parameterdescription>
<para>Vértice de origem. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verticeInserido</parametername>
</parameternamelist>
<parameterdescription>
<para>Vértice de destino. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grafo</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o grafo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true Se a criação das posições nefastas foi realizada com sucesso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Biblioteca/Nefasta.c" line="47" column="6" bodyfile="Biblioteca/Nefasta.c" bodystart="47" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="_nefasta_8c_1a14149d0ef69cea9b06c6c8b6d9cf1413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_nefasta" kindref="compound">Nefasta</ref> *</type>
        <definition>Nefasta * CriarNefasta</definition>
        <argsstring>(Vertice *verticeAtual, Vertice *verticeInserido, Grafo *grafo, int atual[], int inserido[])</argsstring>
        <name>CriarNefasta</name>
        <param>
          <type><ref refid="struct_vertice" kindref="compound">Vertice</ref> *</type>
          <declname>verticeAtual</declname>
        </param>
        <param>
          <type><ref refid="struct_vertice" kindref="compound">Vertice</ref> *</type>
          <declname>verticeInserido</declname>
        </param>
        <param>
          <type><ref refid="struct_grafo" kindref="compound">Grafo</ref> *</type>
          <declname>grafo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atual</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>inserido</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Cria e inicializa uma ou duas estruturas <ref refid="struct_nefasta" kindref="compound">Nefasta</ref> com base nas posições indicadas. </para>
        </briefdescription>
        <detaileddescription>
<para>Cria estruturas <ref refid="struct_nefasta" kindref="compound">Nefasta</ref> a partir de duas posições.</para>
<para>Verifica se as posições são válidas e dentro dos limites do grafo. Para cada posição válida, aloca memória para a estrutura <ref refid="struct_nefasta" kindref="compound">Nefasta</ref>, define os seus dados e chama AdicionarNefasta.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verticeAtual</parametername>
</parameternamelist>
<parameterdescription>
<para>Vértice de origem. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verticeInserido</parametername>
</parameternamelist>
<parameterdescription>
<para>Vértice de destino. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grafo</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o grafo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atual</parametername>
</parameternamelist>
<parameterdescription>
<para>Posição nefastamente afetada no lado do vértice atual (pode ser NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inserido</parametername>
</parameternamelist>
<parameterdescription>
<para>Posição nefastamente afetada no lado do vértice inserido (pode ser NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nefasta* Retorna true após executar a criação. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Biblioteca/Nefasta.c" line="128" column="9" bodyfile="Biblioteca/Nefasta.c" bodystart="128" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="_nefasta_8c_1ae600f365b05d662e10d5e87affa09c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool AdicionarNefasta</definition>
        <argsstring>(Nefasta *nefastaAtual, Nefasta *nefastaInserida, Vertice *verticeAtual, Vertice *verticeInserido)</argsstring>
        <name>AdicionarNefasta</name>
        <param>
          <type><ref refid="struct_nefasta" kindref="compound">Nefasta</ref> *</type>
          <declname>nefastaAtual</declname>
        </param>
        <param>
          <type><ref refid="struct_nefasta" kindref="compound">Nefasta</ref> *</type>
          <declname>nefastaInserida</declname>
        </param>
        <param>
          <type><ref refid="struct_vertice" kindref="compound">Vertice</ref> *</type>
          <declname>verticeAtual</declname>
        </param>
        <param>
          <type><ref refid="struct_vertice" kindref="compound">Vertice</ref> *</type>
          <declname>verticeInserido</declname>
        </param>
        <briefdescription>
<para>Adiciona uma ou duas posições nefastas a uma aresta entre dois vértices. </para>
        </briefdescription>
        <detaileddescription>
<para>Adiciona uma ou duas posições nefastas a uma aresta.</para>
<para>Percorre a lista de arestas do vértice atual até encontrar a que liga ao vértice inserido e adiciona as estruturas <ref refid="struct_nefasta" kindref="compound">Nefasta</ref> no fim da lista correspondente.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nefastaAtual</parametername>
</parameternamelist>
<parameterdescription>
<para>Estrutura <ref refid="struct_nefasta" kindref="compound">Nefasta</ref> associada à posição do vértice atual (pode ser NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nefastaInserida</parametername>
</parameternamelist>
<parameterdescription>
<para>Estrutura <ref refid="struct_nefasta" kindref="compound">Nefasta</ref> associada à posição do vértice inserido (pode ser NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verticeAtual</parametername>
</parameternamelist>
<parameterdescription>
<para>Vértice de origem. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verticeInserido</parametername>
</parameternamelist>
<parameterdescription>
<para>Vértice de destino. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true Se a inserção foi realizada com sucesso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Biblioteca/Nefasta.c" line="162" column="6" bodyfile="Biblioteca/Nefasta.c" bodystart="162" bodyend="207"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Estruturas.h&quot;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExisteVertice(<ref refid="struct_grafo" kindref="compound">Grafo</ref>*<sp/>grafo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atual[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inserido[])</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vertice" kindref="compound">Vertice</ref>*<sp/>auxVertice<sp/>=<sp/>grafo-&gt;primVertice;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(auxVertice<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atual[0]<sp/>==<sp/>auxVertice-&gt;dados.posicao[0]<sp/>&amp;&amp;<sp/>atual[1]<sp/>==<sp/>auxVertice-&gt;dados.posicao[1])</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inserido[0]<sp/>==<sp/>auxVertice-&gt;dados.posicao[0]<sp/>&amp;&amp;<sp/>inserido[1]<sp/>==<sp/>auxVertice-&gt;dados.posicao[1])</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxVertice<sp/>=<sp/>auxVertice-&gt;proxVertice;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CriarPosicaoNefasta(<ref refid="struct_vertice" kindref="compound">Vertice</ref>*<sp/>verticeAtual,<sp/><ref refid="struct_vertice" kindref="compound">Vertice</ref>*<sp/>verticeInserido,<sp/><ref refid="struct_grafo" kindref="compound">Grafo</ref>*<sp/>grafo)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDif<sp/>=<sp/>abs(verticeAtual-&gt;dados.posicao[0]<sp/>-<sp/>verticeInserido-&gt;dados.posicao[0]);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDif<sp/>=<sp/>abs(verticeAtual-&gt;dados.posicao[1]<sp/>-<sp/>verticeInserido-&gt;dados.posicao[1]);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atual[2],<sp/>inserido[2];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xDif<sp/>+<sp/>yDif<sp/>&gt;=<sp/>2)<sp/>&amp;&amp;<sp/>(verticeAtual-&gt;dados.posicao[0]<sp/>+<sp/>xDif<sp/>==<sp/>verticeInserido-&gt;dados.posicao[0]))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atual[0]<sp/>=<sp/>verticeAtual-&gt;dados.posicao[0]<sp/>-<sp/>xDif;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inserido[0]<sp/>=<sp/>verticeInserido-&gt;dados.posicao[0]<sp/>+<sp/>xDif;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verticeAtual-&gt;dados.posicao[1]<sp/>+<sp/>yDif<sp/>==<sp/>verticeInserido-&gt;dados.posicao[1])</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atual[1]<sp/>=<sp/>verticeAtual-&gt;dados.posicao[1]<sp/>-<sp/>yDif;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inserido[1]<sp/>=<sp/>verticeInserido-&gt;dados.posicao[1]<sp/>+<sp/>yDif;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atual[1]<sp/>=<sp/>verticeAtual-&gt;dados.posicao[1]<sp/>+<sp/>yDif;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inserido[1]<sp/>=<sp/>verticeInserido-&gt;dados.posicao[1]<sp/>-<sp/>yDif;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atual[0]<sp/>=<sp/>verticeAtual-&gt;dados.posicao[0]<sp/>+<sp/>xDif;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inserido[0]<sp/>=<sp/>verticeInserido-&gt;dados.posicao[0]<sp/>-<sp/>xDif;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verticeAtual-&gt;dados.posicao[1]<sp/>+<sp/>yDif<sp/>==<sp/>verticeInserido-&gt;dados.posicao[1])</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atual[1]<sp/>=<sp/>verticeAtual-&gt;dados.posicao[1]<sp/>-<sp/>yDif;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inserido[1]<sp/>=<sp/>verticeInserido-&gt;dados.posicao[1]<sp/>+<sp/>yDif;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atual[1]<sp/>=<sp/>verticeAtual-&gt;dados.posicao[1]<sp/>+<sp/>yDif;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inserido[1]<sp/>=<sp/>verticeInserido-&gt;dados.posicao[1]<sp/>-<sp/>yDif;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>atualExiste<sp/>=<sp/>ExisteVertice(grafo,<sp/>atual,<sp/>inserido);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inseridoExiste<sp/>=<sp/>ExisteVertice(grafo,<sp/>atual,<sp/>inserido);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atual<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CriarNefasta(verticeAtual,<sp/>verticeInserido,<sp/>grafo,<sp/>NULL,<sp/>inserido);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inserido<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CriarNefasta(verticeAtual,<sp/>verticeInserido,<sp/>grafo,<sp/>atual,<sp/>NULL);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((atual[0]<sp/>&gt;<sp/>grafo-&gt;dimensao[0]<sp/>||<sp/>atual[1]<sp/>&gt;<sp/>grafo-&gt;dimensao[1])<sp/>||<sp/>(inserido[0]<sp/>&gt;<sp/>grafo-&gt;dimensao[0]<sp/>||<sp/>inserido[1]<sp/>&gt;<sp/>grafo-&gt;dimensao[1]))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atual[0]<sp/>&gt;<sp/>grafo-&gt;dimensao[0]<sp/>||<sp/>atual[1]<sp/>&gt;<sp/>grafo-&gt;dimensao[1])</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CriarNefasta(verticeAtual,<sp/>verticeInserido,<sp/>grafo,<sp/>NULL,<sp/>inserido);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inserido[0]<sp/>&gt;<sp/>grafo-&gt;dimensao[0]<sp/>||<sp/>inserido[1]<sp/>&gt;<sp/>grafo-&gt;dimensao[1])</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CriarNefasta(verticeAtual,<sp/>verticeInserido,<sp/>grafo,<sp/>atual,<sp/>NULL);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>CriarNefasta(verticeAtual,<sp/>verticeInserido,<sp/>grafo,<sp/>atual,<sp/>inserido);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*<sp/>CriarNefasta(<ref refid="struct_vertice" kindref="compound">Vertice</ref>*<sp/>verticeAtual,<sp/><ref refid="struct_vertice" kindref="compound">Vertice</ref>*<sp/>verticeInserido,<sp/><ref refid="struct_grafo" kindref="compound">Grafo</ref>*<sp/>grafo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atual[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inserido[])</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atual<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>atual[0]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>atual[0]<sp/>&lt;=<sp/>grafo-&gt;dimensao[0]<sp/>&amp;&amp;<sp/>atual[1]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>atual[1]<sp/>&lt;=<sp/>grafo-&gt;dimensao[1])</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*<sp/>nefastaAtual<sp/>=<sp/>(<ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_nefasta" kindref="compound">Nefasta</ref>));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaAtual-&gt;dados.posicao[0]<sp/>=<sp/>atual[0];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaAtual-&gt;dados.posicao[1]<sp/>=<sp/>atual[1];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaAtual-&gt;dados.frequencia<sp/>=<sp/>verticeAtual-&gt;dados.frequencia;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaAtual-&gt;proxNefasta<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdicionarNefasta(nefastaAtual,<sp/>NULL,<sp/>verticeAtual,<sp/>verticeInserido);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inserido<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>inserido[0]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>inserido[0]<sp/>&lt;=<sp/>grafo-&gt;dimensao[0]<sp/>&amp;&amp;<sp/>inserido[1]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>inserido[1]<sp/>&lt;=<sp/>grafo-&gt;dimensao[1])</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*<sp/>nefastaInserida<sp/>=<sp/>(<ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_nefasta" kindref="compound">Nefasta</ref>));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaInserida-&gt;proxNefasta<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaInserida-&gt;dados.posicao[0]<sp/>=<sp/>inserido[0];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaInserida-&gt;dados.posicao[1]<sp/>=<sp/>inserido[1];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaInserida-&gt;dados.frequencia<sp/>=<sp/>verticeAtual-&gt;dados.frequencia;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdicionarNefasta(NULL,<sp/>nefastaInserida,<sp/>verticeAtual,<sp/>verticeInserido);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AdicionarNefasta(<ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*<sp/>nefastaAtual,<sp/><ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*<sp/>nefastaInserida,<sp/><ref refid="struct_vertice" kindref="compound">Vertice</ref>*<sp/>verticeAtual,<sp/><ref refid="struct_vertice" kindref="compound">Vertice</ref>*<sp/>verticeInserido)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_aresta" kindref="compound">Aresta</ref>*<sp/>auxAresta<sp/>=<sp/>verticeAtual-&gt;primAresta;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(auxAresta<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auxAresta-&gt;adjVertice<sp/>==<sp/>verticeInserido)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nefastaAtual<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaAtual-&gt;proxNefasta<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auxAresta-&gt;primNefasta<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxAresta-&gt;primNefasta<sp/>=<sp/>nefastaAtual;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*<sp/>auxNefasta<sp/>=<sp/>auxAresta-&gt;primNefasta;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(auxNefasta-&gt;proxNefasta<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxNefasta<sp/>=<sp/>auxNefasta-&gt;proxNefasta;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxNefasta-&gt;proxNefasta<sp/>=<sp/>nefastaAtual;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nefastaInserida<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nefastaInserida-&gt;proxNefasta<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(auxAresta-&gt;primNefasta<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxAresta-&gt;primNefasta<sp/>=<sp/>nefastaInserida;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_nefasta" kindref="compound">Nefasta</ref>*<sp/>auxNefasta<sp/>=<sp/>auxAresta-&gt;primNefasta;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(auxNefasta-&gt;proxNefasta<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxNefasta<sp/>=<sp/>auxNefasta-&gt;proxNefasta;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxNefasta-&gt;proxNefasta<sp/>=<sp/>nefastaInserida;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auxAresta<sp/>=<sp/>auxAresta-&gt;proxAresta;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Biblioteca/Nefasta.c"/>
  </compounddef>
</doxygen>
